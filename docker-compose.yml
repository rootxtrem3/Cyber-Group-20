# docker-compose.yml
version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: honeypot-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_DATABASE=honeypot
    networks:
      - honeypot_net
    restart: unless-stopped

  # Data Logger & Parser (YOUR SERVICE)
  data-logger:
    build: ./data-logger
    container_name: honeypot-data-logger
    ports:
      - "8765:8765"  # WebSocket server
    volumes:
      - ./logs:/app/logs
      - ./data-logger-parser/config:/app/config:ro
    environment:
      - MONGO_URI=mongodb://mongodb:27017/
      - LOG_LEVEL=INFO
    networks:
      - honeypot_net
    restart: unless-stopped
    depends_on:
      - mongodb

  # Cowrie Honeypot
  cowrie:
    image: cowrie/cowrie:latest
    container_name: honeypot-cowrie
    ports:
      - "2222:2222"  # SSH
      - "2223:2223"  # Telnet
    volumes:
      - ./cowrie/cowrie.cfg:/cowrie/cowrie-git/etc/cowrie.cfg:ro
      - cowrie_logs:/cowrie/cowrie-git/var/log/cowrie
    networks:
      - honeypot_net
    restart: unless-stopped

  # HTTP Honeypot
  http-honeypot:
    build: ./http-honeypot
    container_name: honeypot-http
    ports:
      - "80:8080"
      - "443:8443"
    volumes:
      - ./http-honeypot:/app:ro
    networks:
      - honeypot_net
    restart: unless-stopped

  # Dashboard
  dashboard:
    build: ./dashboard
    container_name: honeypot-dashboard
    ports:
      - "3000:3000"
    volumes:
      - ./dashboard:/app:ro
    networks:
      - honeypot_net
    restart: unless-stopped
    depends_on:
      - data-logger

volumes:
  mongodb_data:
  cowrie_logs:

networks:
  honeypot_net:
    driver: bridge
